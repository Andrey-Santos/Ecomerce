@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">

            <a id="navbarDropdown" class="nav-link dropdown-toggle text-dark" href="#" role="button"
                data-bs-toggle="dropdown" aria-expanded="false">
                Ol√°, @(UserManager.GetUserName(User))!
            </a>

            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">

                <li class="dropdown-item">
                    <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"
                        class="text-dark nav-link">Gerenciar Conta</a>
                </li>

                <li class="nav-item text-center">
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                        asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="btn btn-sm my-1">
                            Logout
                        </button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Registar</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>