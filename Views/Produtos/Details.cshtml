@model Ecomerce.Models.Produto

@{
    ViewData["Title"] = Model.Nome;

    int estoqueTotal = Model.Variacoes?.Sum(v => v.Estoque) ?? 0;
    bool isEsgotadoTotal = estoqueTotal <= 0;
}

<div class="container mt-5">
    <div class="card shadow-lg border-0 rounded-4 overflow-hidden">
        <div class="row g-0">
            <div class="col-md-5 bg-light d-flex align-items-center justify-content-center p-4">
                <img src="@Model.ImagemUrl" class="img-fluid rounded-3 shadow-sm" alt="@Model.Nome"
                    style="max-height: 450px; object-fit: contain;">
            </div>

            <div class="col-md-7 p-4">
                <h2 class="fw-bold">@Model.Nome</h2>
                <p class="text-muted mb-3">@Model.Descricao</p>
                <hr />

                <div class="d-flex align-items-center mb-4">
                    <h3 class="text-success fw-bold me-3 mb-0">@Model.Preco.ToString("C2")</h3>

                    @if (!isEsgotadoTotal)
                    {
                        <span class="badge bg-success fs-6">Em estoque: @estoqueTotal</span>
                    }
                    else
                    {
                        <span class="badge bg-danger fs-6">Esgotado</span>
                    }
                </div>

                @if (!isEsgotadoTotal)
                {
                    <form id="formAdicionarCarrinho" asp-controller="Carrinho" asp-action="Adicionar" method="post"
                        class="d-flex flex-column">

                        <div class="mb-3">
                            <label for="VariacaoId" class="form-label fw-bold">Selecione o Sabor:</label>
                            <select name="VariacaoId" id="VariacaoId" class="form-select shadow-sm" required>
                                <option value="">Escolha um sabor</option>
                                @foreach (Variacao variacao in Model.Variacoes.Where(v => v.Estoque > 0))
                                {
                                    <option value="@variacao.Id" data-estoque="@variacao.Estoque">@variacao.Nome
                                        (@variacao.Estoque em estoque)</option>
                                }
                            </select>
                        </div>

                        <div class="mb-4">
                            <label for="quantidade" class="form-label fw-bold">Quantidade:</label>
                            <input type="number" name="quantidade" id="quantidade" value="1" min="1" max="1"
                                class="form-control shadow-sm text-center" style="width: 100px;" required />
                        </div>

                        <button type="submit" id="btnAdicionar" class="btn btn-lg btn-primary shadow-sm">
                            <i class="bi bi-cart-plus"></i> Adicionar ao Carrinho
                        </button>
                    </form>
                }
                else
                {
                    <button type="button" class="btn btn-lg btn-secondary w-100" disabled>
                        <i class="bi bi-x-circle"></i> Produto Indisponível
                    </button>
                }

                <div class="mt-5">
                    <a asp-action="Index" asp-controller="Home" class="btn btn-outline-secondary px-4">
                        <i class="bi bi-arrow-left"></i> Voltar à Home
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#VariacaoId').on('change', function () {
                var select = $(this);
                var maxEstoque = select.find(':selected').data('estoque') || 1;
                var quantidadeInput = $('#quantidade');

                quantidadeInput.attr('max', maxEstoque);

                if (parseInt(quantidadeInput.val()) > maxEstoque) {
                    quantidadeInput.val(1);
                } else if (parseInt(quantidadeInput.val()) === 0) {
                    quantidadeInput.val(1);
                }
            });

            $('#formAdicionarCarrinho').submit(function (e) {
                if (!$('#VariacaoId').val()) {
                    exibirToast("Por favor, selecione um sabor.", "bg-warning");
                    e.preventDefault();
                    return;
                }

                var form = $(this);
                debugger;
                var formData = form.serialize();
                var btn = $('#btnAdicionar');
                var originalHtml = btn.html();

                btn.attr('disabled', true).html('<span class="spinner-border spinner-border-sm"></span> Adicionando...');

                $.ajax({
                    type: "POST",
                    url: form.attr('action'),
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            btn.attr('disabled', false).html(originalHtml);
                            exibirToast(response.message, "bg-success");
                            if (response.totalItens !== undefined) {
                                var cartCountElement = $('#cart-count');
                                cartCountElement.text(response.totalItens);
                                if (response.totalItens > 0) {
                                    cartCountElement.removeClass('d-none');
                                } else {
                                    cartCountElement.addClass('d-none');
                                }
                            }
                        } else {
                            btn.attr('disabled', false).html(originalHtml);
                            exibirToast(response.message || "Não foi possível adicionar ao carrinho.", "bg-danger");
                        }
                    },
                    error: function () {
                        btn.attr('disabled', false).html(originalHtml);
                        exibirToast("Erro de conexão ao servidor.", "bg-danger");
                    }
                });
                e.preventDefault();
            });

            function exibirToast(mensagem, bgClass) {
                var toastHtml = `
        <div aria-live="polite" aria-atomic="true" class="position-relative">
            <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 2000; margin-top: 55px;">
                <div class="toast align-items-center text-white ${bgClass} border-0 shadow-sm"
                    role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="4000">
                    <div class="d-flex">
                        <div class="toast-body">${mensagem}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto"
                                data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            </div>
        </div>`;

                $('body').append(toastHtml);
                var toastEl = document.querySelector('.toast.text-white');

                if (toastEl) {
                    var toast = new bootstrap.Toast(toastEl);
                    toast.show();
                    toastEl.addEventListener('hidden.bs.toast', function () {
                        toastEl.remove();
                    });
                }
            }
        });
    </script>
}